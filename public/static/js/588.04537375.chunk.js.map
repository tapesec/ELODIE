{"version":3,"file":"static/js/588.04537375.chunk.js","mappings":"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","sources":["dashboard/components/InvoiceModal.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getInvoiceModalStatus } from '../invoiceModal.selector';\nimport { toggleModal } from '../invoiceModal.reducer';\n\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DatePicker from '@mui/lab/DatePicker';\nimport AdapterDayjs from '@mui/lab/AdapterDayjs';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport Switch from '@mui/material/Switch';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n\nenum FIELD_TYPE {\n  PATIENT_NAME = 'patient_name',\n  PATIENT_SHARE = 'patient_share',\n  PATIENT_PAID = 'patient_paid',\n  SECU_SHARE = 'SECU_share',\n  SECU_PAID = 'SECU_paid',\n}\n\nexport default function FormDialog() {\n  const [state, setState] = useState<InvoiceModalInternalState>({\n    invoiceId: undefined,\n    dateInvoice: new Date().toString(),\n    patient_name: '',\n    patient_share: 0,\n    patient_paid: false,\n    SECU_share: 0,\n    SECU_paid: false,\n    mode: 'CREATE',\n    dateError: false,\n  });\n  const dispatch = useDispatch();\n  const modalStatus = useSelector(getInvoiceModalStatus);\n  const invoiceToUpdate = modalStatus.invoiceToUpdate;\n  useEffect(() => {\n    setState({\n      invoiceId: invoiceToUpdate?.id,\n      dateInvoice: invoiceToUpdate?.date || new Date().toString(),\n      patient_name: invoiceToUpdate?.patient_name || '',\n      patient_share: invoiceToUpdate?.patient_share.value || 0,\n      patient_paid: invoiceToUpdate?.patient_share.paid || false,\n      SECU_share: invoiceToUpdate?.SECU_share.value || 0,\n      SECU_paid: invoiceToUpdate?.SECU_share.paid || false,\n      mode: 'EDIT',\n      dateError: false,\n    });\n  }, [invoiceToUpdate]);\n\n  let modalTitle;\n  if (!modalStatus.invoiceToUpdate) {\n    modalTitle = 'Ajoute une facturation';\n  } else modalTitle = 'Modifie une facturation';\n\n  const handleClose = () => {\n    dispatch(toggleModal({ open: false }));\n  };\n\n  const submit = () => {\n    dispatch({\n      type: 'SAVE_INVOICE',\n      payload: {\n        invoiceId: state.invoiceId,\n        dateInvoice: state.dateInvoice,\n        patient_name: state.patient_name,\n        patient_share: state.patient_share || 0,\n        patient_paid: state.patient_paid,\n        SECU_share: state.SECU_share || 0,\n        SECU_paid: state.SECU_paid,\n        mode: state.mode,\n      },\n    });\n  };\n\n  const submitDisabled =\n    state.patient_name === '' || state.dateError === true || state.dateInvoice === null;\n\n  const onInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const target = event.currentTarget;\n    const handleValueByTarget = (target: EventTarget & HTMLInputElement) => {\n      if (target.id === FIELD_TYPE.PATIENT_PAID || target.id === FIELD_TYPE.SECU_PAID)\n        return target.checked;\n      if (target.id === FIELD_TYPE.PATIENT_SHARE || target.id === FIELD_TYPE.SECU_SHARE) {\n        if (target.value === '') return 0;\n        return parseFloat(target.value.replace(',', '.'));\n      }\n      return target.value;\n    };\n    setState((prevState) => ({\n      ...prevState,\n      [target.id]: handleValueByTarget(target),\n    }));\n  };\n\n  const dateOnChange = (newValue: Date | null) => {\n    setState((prevState) => ({\n      ...prevState,\n      dateInvoice: newValue?.toString() || new Date().toString(),\n    }));\n  };\n\n  const dateOnError = (error: string | null) => {\n    setState((prevState) => ({\n      ...prevState,\n      dateError: error !== null,\n    }));\n  };\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" open={modalStatus.open} onClose={handleClose}>\n      <DialogTitle>{modalTitle}</DialogTitle>\n      <DialogContent style={{ paddingTop: '10px' }}>\n        <LocalizationProvider locale=\"fr\" dateAdapter={AdapterDayjs}>\n          <DatePicker\n            label=\"Date du soin\"\n            mask=\"__/__/__\"\n            value={state.dateInvoice}\n            inputFormat=\"DD/MM/YY\"\n            onError={dateOnError}\n            onChange={dateOnChange}\n            renderInput={(params) => <TextField fullWidth {...params} />}\n          />\n        </LocalizationProvider>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id={FIELD_TYPE.PATIENT_NAME}\n          label=\"Nom du patient\"\n          type=\"text\"\n          placeholder=\"Danse avec les sparadrap\"\n          required={true}\n          fullWidth\n          value={state.patient_name}\n          variant=\"standard\"\n          onChange={onInputChange}\n        />\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id={FIELD_TYPE.PATIENT_SHARE}\n          label=\"Part patient\"\n          type=\"number\"\n          placeholder=\"499.99\"\n          helperText=\"\"\n          fullWidth\n          value={state.patient_share || ''}\n          onChange={onInputChange}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,\n          }}\n          inputProps={{\n            inputMode: 'numeric',\n            pattern: '[0-9]*',\n          }}\n          variant=\"standard\"\n        />\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                id={FIELD_TYPE.PATIENT_PAID}\n                onChange={onInputChange}\n                checked={state.patient_paid}\n              />\n            }\n            label=\"Payé ?\"\n          />\n        </FormGroup>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id={FIELD_TYPE.SECU_SHARE}\n          label=\"Part CPAM\"\n          type=\"number\"\n          placeholder=\"499.99\"\n          fullWidth\n          value={state.SECU_share || ''}\n          onChange={onInputChange}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">€</InputAdornment>,\n          }}\n          inputProps={{\n            inputMode: 'numeric',\n            pattern: '[0-9]*',\n          }}\n          variant=\"standard\"\n        />\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                id={FIELD_TYPE.SECU_PAID}\n                onChange={onInputChange}\n                checked={state.SECU_paid}\n              />\n            }\n            label=\"Payé ?\"\n          />\n        </FormGroup>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Annuler</Button>\n        <Button disabled={submitDisabled} onClick={submit}>\n          Sauvegarder\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nexport interface InvoiceModalInternalState {\n  invoiceId: string | undefined;\n  dateInvoice: string;\n  patient_name: string;\n  patient_share: number;\n  patient_paid: boolean;\n  SECU_share: number;\n  SECU_paid: boolean;\n  dateError: boolean;\n  mode: 'EDIT' | 'CREATE';\n}\n"],"names":["FIELD_TYPE","FormDialog","modalTitle","useState","invoiceId","undefined","dateInvoice","Date","toString","patient_name","patient_share","patient_paid","SECU_share","SECU_paid","mode","dateError","state","setState","dispatch","useDispatch","modalStatus","useSelector","getInvoiceModalStatus","invoiceToUpdate","useEffect","id","date","value","paid","handleClose","toggleModal","open","submitDisabled","onInputChange","event","target","currentTarget","prevState","PATIENT_PAID","SECU_PAID","checked","PATIENT_SHARE","SECU_SHARE","parseFloat","replace","handleValueByTarget","fullWidth","maxWidth","onClose","style","paddingTop","locale","dateAdapter","AdapterDayjs","label","mask","inputFormat","onError","error","onChange","newValue","renderInput","params","autoFocus","margin","PATIENT_NAME","type","placeholder","required","variant","helperText","InputProps","endAdornment","position","inputProps","inputMode","pattern","control","onClick","disabled","payload"],"sourceRoot":""}